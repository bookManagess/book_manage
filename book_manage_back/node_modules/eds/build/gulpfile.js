const path = require('path');
const cheerio = require('cheerio');

const gulp = require('gulp');
const pug = require('gulp-pug');
const rename = require("gulp-rename");
const clean = require('gulp-clean');

const _ = require('lodash');

const utils = require('./utils');
const readModuleFile = utils.readModuleFile;
const dirs = utils.dirs;
const mapDrawioList = utils.mapDrawioList;
const getSettings = utils.getSettings;
const createDrawio = utils.createDrawio;
const createTemps = utils.createTemps;
const renderClone = utils.renderClone;
const renderHeader = utils.renderHeader;

const srcPath = '../src';
const distPath = '../dist';
const versions = dirs(srcPath).filter(el => el !== 'js' && el !== 'pug');

gulp.task('cleanPages', (done) => {
  const array = versions.map(el => `${distPath}/${el}`);
  array.push(`${distPath}/*.html`);
  return gulp
    .src(array, { allowEmpty: true })
    .pipe(clean({force: true}));
});

gulp.task('createDrawio', (done) => {
  return gulp
    .src(`${srcPath}/**/*.html`)
    .pipe(readModuleFile(file => createDrawio(file, getSettings(versions, 'sitemap.js'), getSettings(versions, 'drawio'))))
    .pipe(gulp.dest(`${distPath}`));
});

gulp.task('createTemps', (done) => {
  return gulp
    .src(`${distPath}/**/*.html`)
    .pipe(readModuleFile(createTemps))
    .pipe(gulp.dest('./temp'));
});

gulp.task('createPages', (done) => {
  return gulp
    .src(versions.map(el => `${srcPath}/${el}/*.pug`))
    .pipe(pug())
    .pipe(readModuleFile(file => renderClone(file, mapDrawioList(versions))))
    .pipe(readModuleFile(file => renderHeader(file, versions, getSettings(versions, 'i18next'))))
    .pipe(gulp.dest(function (file) {
      const version = path.dirname(file.path).split(path.sep).pop();
      return `${distPath}/${version}`;
  }));
});

gulp.task('build', gulp.series('cleanPages', 'createDrawio', 'createTemps', 'createPages', (done) => {
  gulp
    .src(['!./temp/.gitkeep', './temp/*'], { allowEmpty: true })
    .pipe(clean({force: true}));
  done();
}));

gulp.task('watch', () => {
	gulp.watch([`${srcPath}/**/*.html`, `${srcPath}/**/*.pug`, `${srcPath}/**/*.js`], gulp.parallel('build'));
});

gulp.task('dev', gulp.parallel('build', 'watch'));